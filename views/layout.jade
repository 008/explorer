doctype html
html
  head
    title= settings.title
    link(rel='stylesheet', href='/themes/#{settings.theme}/bootstrap.min.css')
    link(rel='stylesheet', href='/vendor/jqplot/jquery.jqplot.css')
    link(rel='stylesheet', href='//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.css')
    link(rel='stylesheet', href='//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css')
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js')
    script(src='//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js')
    script(src='/vendor/jqplot/jquery.jqplot.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.dateAxisRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.ohlcRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.highlighter.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.pieRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.barRenderer.min.js')
    script(src='/vendor/jqplot/plugins/jqplot.categoryAxisRenderer.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.9.0/moment.min.js')
    script(src='//cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js')
    script(src='//cdn.datatables.net/responsive/1.0.1/js/dataTables.responsive.js')
    script(src='//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.js')
    script(src='/javascripts/chart.js')
    script(src='/javascripts/currency.js')
    script.
      $(document).ready(function(){
        $('##{active}').addClass('active');
        function update_stats(){
          var supply = 0;
          var burnt = 0;
          $.ajax({url: '/summary', success: function(json){
            $("#supply").text(json.supply);
            supply = json.supply;
            $("#difficulty").text(json.difficulty);
            $("#difficultyHybrid").text(json.difficultyHybrid);
            $("#hashrate").text(json.hashrate);
            $("#lastPrice").text(json.lastPrice.toFixed(8));
            $("#lblConnections").text(json.connections + ' connections');
            $("#lblBlockcount").text(json.blockcount + ' blocks');
            $("#lblX1").text(' ');
            $("#burnfee").text(json.burnFee);
            $("#burnnode").text(json.burnNode);
            $("#burntotal").text(json.burnFee + json.burnNode);
          }});
          $.ajax({url: '/nodelist', success: function ( json ) {
              const keys = Object.keys(json);
              var big = 0, big_enable = 0, big_disable = 0, mid = 0, mid_enable = 0, mid_disable = 0, lil = 0, lil_enable = 0, lil_disable = 0;
              var reward_lil = 0, reward_mid = 0, reward_big = 0;
              var burnAmount_lil = 0, burnAmount_mid = 0, burnAmount_big = 0;
              for (var i = 0; i < keys.length; i++) {
                const line = {}
                line['address'] = keys[i];
                const lineData = json[keys[i]].split(" ");
                const noEmptyData = [];
                for (var j = 0; j < lineData.length; j++) {
                  if (lineData[j].length !== 0) {
                    noEmptyData.push(lineData[j])
                  }
                }
                line['status'] = noEmptyData[0].replace(/_/g, ' ').toLowerCase()
                if (noEmptyData[8] == 1) { 
                  lil++;
                  reward_lil = noEmptyData[9];
                  burnAmount_lil = noEmptyData[10];
                  if (line['status'] == 'enabled') { lil_enable++; } else { lil_disable++; }
                }
                if (noEmptyData[8] == 5) { 
                  mid++; 
                  reward_mid = noEmptyData[9];
                  burnAmount_mid = noEmptyData[10];
                  if (line['status'] == 'enabled') { mid_enable++; } else { mid_disable++; }
                }
                if (noEmptyData[8] == 10) { 
                  big++;
                  reward_big = noEmptyData[9];
                  burnAmount_big = noEmptyData[10];
                  if (line['status'] == 'enabled') { big_enable++; } else { big_disable++; }
                }
              }
              var roi_big = "UNKNOWN"; if(reward_big != 0) roi_big = "" + burnAmount_big / ((720 / big_enable) * reward_big);
              var roi_mid = "UNKNOWN"; if(reward_mid != 0) roi_mid = "" + burnAmount_mid / ((720 / mid_enable) * reward_mid);
              var roi_lil = "UNKNOWN"; if(reward_lil != 0) roi_lil = "" + burnAmount_lil / ((720 / lil_enable) * reward_lil);
              $("#n_big").text(big + " (" + big_enable + "/" + big_disable + ") / ROI: " + Math.floor(roi_big) + " days");
              $("#n_mid").text(mid + " (" + mid_enable + "/" + mid_disable + ") / ROI: " + Math.floor(roi_mid) + " days");
              $("#n_lil").text(lil + " (" + lil_enable + "/" + lil_disable + ") / ROI: " + Math.floor(roi_lil) + " days");
          }});
        }
        $('.block-last-next').tooltip({
          animation: true,
          delay: { hide: 500 },
        });
        $('.history-table').dataTable( {
          searching: false,
          ordering: false,
          responsive: true
        });
        $('.iquidus').css('color',$('.table').css('color'));
        $(window).resize(function () {
          $($.fn.dataTable.tables( true ) ).DataTable().columns.adjust();
        });
        setInterval( function() {
          update_stats();
        }, 60000);
        update_stats();
      });
  body
    - function format_unixtime(unixtime) {
      - var a = new Date(unixtime*1000);
      - var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
      - var year = a.getFullYear();
      - var month = months[a.getMonth()];
      - var date = a.getDate();
      - var hour = a.getHours();
      - var min = a.getMinutes();
      - var sec = a.getSeconds();
      - var suffix = 'th'
      if date == 1 || date == 21 || date == 31
        - suffix = 'st'
      if date == 2 || date == 22 || date == 32
        - suffix = 'nd'
      if date == 3 || date == 23
        - suffix = 'rd'
      if hour < 10
        - hour = '0' + hour
      if min < 10
        - min = '0' + min
      if sec < 10
        - sec = '0' + sec
      - var time = date + suffix + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;
      - return time
    -  };
    .nav.navbar.navbar-default.navbar-fixed-top(role='navigation')
      .container-fluid
        .navbar-header(style='float:left;')
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='#navbar-collapse')
            span.sr-only Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          a.navbar-brand(href='/') #{settings.title}
        .collapse.navbar-collapse(id='navbar-collapse' style='float:left;')
          ul.nav.navbar-nav
            li#home
              a.navbar-link(href='/')
                span.glyphicon.glyphicon-search
                span.menu-text #{settings.locale.menu_explorer}
            if settings.heavy == true
              li#reward
                a.navbar-link(href='/reward')
                  span.fa.fa-star
                  span.menu-text #{settings.locale.menu_reward}
            if settings.display.movement == true
              li#movement
                a.navbar-link.loading(href='/movement')
                  span.fa.fa-money
                  span.menu-text #{settings.locale.menu_movement}
            if settings.display.network == true
              li#network
                a.navbar-link(href='/network')
                  span.fa.fa-share-alt
                  span.menu-text #{settings.locale.menu_network}
            if settings.display.richlist == true
              li#richlist
                a.navbar-link(href='/richlist')
                  span.fa.fa-btc
                  span.menu-text #{settings.locale.menu_richlist}
            if settings.display.markets == true
              li#markets
                a.navbar-link.loading(href='/markets/#{settings.markets.default}')
                  span.fa.fa-line-chart
                  span.menu-text #{settings.locale.menu_markets}
            if settings.display.api == true
              li#info
                a.navbar-link(href='/info')
                  span.glyphicon.glyphicon-info-sign
                  span.menu-text #{settings.locale.menu_api}
            if settings.display.poolstats == true
              li#info
                a.navbar-link(href='/pool-stats')
                  span.glyphicon.glyphicon-stats
                  span.menu-text #{settings.locale.menu_poolstats}
            if settings.display.infinitynodes == true
              li#info
                a.navbar-link(href='/infinitynodes')
                  span.glyphicon.glyphicon-list-alt
                  span.menu-text #{settings.locale.menu_infinitynodes}
.col-md-12
   .panel-body(style='margin-bottom:5px;')
    .col-md-12
      .row.text-center
        .search(style='align:center;margin-top:5px;')
          form.form-inline(method='post', action='/search')
            #index-search.form-group
              input.form-control(type='text', name='search', placeholder='#{settings.locale.ex_search_message}', style='min-width:80%;margin-right:5px;')
              button.btn.btn-success(type='submit') #{settings.locale.ex_search_button}
.col-md-12
   .panel-body(style='margin-bottom:5px;')
    .col-md-12
      .row.text-center
        .col-md-3
          .panel.panel-default.hidden-sm.hidden-xs
            <div class="coinmarketcap-currency-widget" data-currencyid="3514" data-base="USD"  data-secondary="BTC"></div>
        .col-md-3
          .panel.panel-default.hidden-sm.hidden-xs
            .panel-heading
              strong #{settings.locale.network}
            .panel-body
              table.table.table-bordered.summary-table
                tbody
                  tr
                    td
                      if settings.nethash_units == 'K'
                        span #{settings.locale.hashrate} (KH/s)
                      else if settings.nethash_units == 'M'
                        span #{settings.locale.hashrate} (MH/s)
                      else if settings.nethash_units == 'G'
                        span #{settings.locale.hashrate} (GH/s)
                      else if settings.nethash_units == 'T'
                        span #{settings.locale.hashrate} (TH/s)
                      else if settings.nethash_units == 'P'
                        span #{settings.locale.hashrate} (PH/s)
                      else if settings.nethash_units == 'H'
                        span #{settings.locale.hashrate} (H/s)
                    td
                      if settings.index.difficulty == 'Hybrid'
                        span#hashrate -
                        <br>
                        span#lblX1
                      else
                        span#hashrate -
                  tr
                    td
                      span #{settings.locale.difficulty}
                    td
                      span#difficulty -
                  tr
                    td
                      span #{settings.locale.ex_supply}
                    td
                      span#supply -
              <br />
        .col-md-3
          .panel.panel-default.hidden-sm.hidden-xs
            .panel-heading
              strong #{settings.locale.burn_stat}
            .panel-body
              table.table.table-bordered.summary-table
                tbody
                  tr
                    td
                        span #{settings.locale.burn_fee}
                    td
                        span#burnfee -
                  tr
                    td
                      span #{settings.locale.burn_node}
                    td
                      span#burnnode -
                  tr
                    td
                      span #{settings.locale.burn_total}
                    td
                      span#burntotal -
              <br />
        .col-md-3
          .panel.panel-default.hidden-sm.hidden-xs
            .panel-heading
              strong #{settings.locale.infinitynode_stat}
            .panel-body
              table.table.table-bordered.summary-table
                tbody
                  tr
                    td
                        span #{settings.locale.infinitynode_n_big}
                    td
                        span#n_big -
                  tr
                    td
                      span #{settings.locale.infinitynode_n_mid}
                    td
                      span#n_mid -
                  tr
                    td
                      span #{settings.locale.infinitynode_n_lil}
                    td
                      span#n_lil -
              <br />
    block content
    .navbar.navbar-default.navbar-fixed-bottom.hidden-xs
      .col-md-4
        if settings.display.twitter
          ul.nav.navbar-nav
            li.pull-left
              a#twitter-icon(href="https://twitter.com/#{settings.twitter}", target='_blank')
                span.glyphicon.fa.fa-twitter
        if settings.display.facebook
          ul.nav.navbar-nav
            li.pull-left
              a#facebook-icon(href="https://www.facebook.com/#{settings.facebook}", target='_blank')
                span.glyphicon.fa.fa-facebook
        if settings.display.googleplus
          ul.nav.navbar-nav
            li.pull-left
              a#googleplus-icon(href="https://plus.google.com/#{settings.googleplus}", target='_blank')
                span.glyphicon.fa.fa-google-plus
        if settings.display.youtube
          ul.nav.navbar-nav
            li.pull-left
              a#youtube-icon(href="https://www.youtube.com/channel/#{settings.youtube}", target='_blank')
                span.glyphicon.fa.fa-youtube
     .col-md-4
        block intro
 .container
      div(id="images")
         center
             img(alt="sinovate", src="/images/sinlogo.png", width="160", margin-top="0", style="text-align:middle")
      //span.connections
        //label#lblBlockcount.label.label-default -
        //label#lblConnections.label.label-default -
